GridWorld class

vertices　頂点数を保持
direction 0~5
direction_mean 0~5に上下左右前後に意味を持たせる
action_space 
{
    {0, {0,1,2,3,4,5}},
    {1, {0,1,2,3,4,5}},
    ...
    {vertices-1, {0,1,2,3,4,5}}
}

reward_map
環境は3次元配列
そのどの位置にどの頂点があるかが1つの状態
例えば，3*3*3のグリッドに8個の頂点の
頂点がないところは(-1)
頂点があるところは(頂点番号)
とすれば，vvviをkeyにしてdoubleをvalueとするmapで
reward_mapを表現できる．

各頂点番号に対して，その座標（vvviのインデックス）がどこかで状態を保持することにする
{{x0, y0, z0}, {x1, y1, z1}, ...}
このvviが状態数個ある
このvviをkeyとして，doubleをvalueとするmapにする．
（今回の問題設定ではmapのサイズは27C8になるはず）

ゴール状態
目的の形は立方体であるので各頂点は以下になる
{0,0,0}, {0,0,2}, {0,2,0}, {0,2,2}
{2,0,0}, {2,0,2}, {2,2,0}, {2,2,2}
これを昇順に並べた
{{0,0,0}, {0,0,2}, {0,2,0}, {0,2,2}, {2,0,0}, {2,0,2}, {2,2,0}, {2,2,2}}
が，ゴールの状態となる．そのrewardを高くする．
初期のreward_mapはこの状態のみに，報酬を与える．

スタート状態
グリッドワールド自体が小さいので，初期からゴールに近いような気もするが，
{0,0,0}, {0,0,1}, {0,1,0}, {0,1,1}
{1,0,0}, {1,0,1}, {1,1,0}, {1,1,1}
としてみるこれは全然変更していい．

height, width, shapeメソッドをコメントアウト
使うかもしれないけど，一旦ないものとした

next_stateメソッドを3次元に対応
引数は今の状態vvi，アクションint
この状態の時に動けるのか状態の時に指定のアクションができるかどうかを判定するのが難しい．
現時点で実装済みの条件
・頂点座標が0,1,2の外側に出たらだめ

reward関数を対応